:root {
  ---color-float-bg: rgb(246, 246, 246, 0.62);
  ---color-blue: rgb(23, 173, 218);
  ---color-pink: rgb(228, 160, 171);
  ---color-white: #fff;
  ---color-inactive: #ccc;
  ---color-inactive-light: #eee;
}

html,
body {
  font-family: "Josefin Sans", sans-serif;
}

#map {
  height: 90vh;
}

ul {
  padding: 0;
  margin: 0;
}

main {
  position: relative;
}

a {
  color: var(---color-blue);
  text-underline-offset: 0.4rem;
  text-decoration-thickness: 0.2rem;
}
a:visited {
  color: var(---color-pink);
}

.box_floating {
  max-width: 300px;
  position: absolute;
  z-index: 1000;
  background-color: var(---color-float-bg);
  padding: 1rem;
  border-radius: 1rem;
  margin: 1rem;
}

/* custom checkbox: */
/* The container */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: var(---color-inactive-light);
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: var(---color-inactive);
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: var(---color-blue);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid var(---color-white);
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
